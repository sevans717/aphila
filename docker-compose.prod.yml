version: "3.8"

services:
  traefik:
    image: traefik:latest
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    ports:
      - "10080:80"
      - "10143:443"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/acme:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - aphila-network

  pgbouncer:
    image: edoburu/pgbouncer:latest
    restart: unless-stopped
    environment:
      # PgBouncer needs to know the upstream Postgres; keep this pointing at the
      # `db` service. Runtime clients should connect to PgBouncer on port 6432.
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/sav3
    volumes:
      - ./pgbouncer:/etc/pgbouncer
    ports:
      - "10002:6432"
    depends_on:
      - db
    networks:
      - aphila-network

  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-sav3}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - aphila-network

  # MinIO - Self-hosted S3-compatible storage
  minio:
    image: minio/minio:RELEASE.2024-08-17T01-24-54Z
    container_name: sav3_minio_prod
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio_admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio_admin_password123}
      MINIO_DOMAIN: ${MINIO_DOMAIN:-minio.aphila.io}
      MINIO_BROWSER: ${MINIO_BROWSER:-on}
      MINIO_CONSOLE_ADDRESS: ":9001"
      MINIO_API_CORS_ALLOW_ORIGIN: "*"
    ports:
      - "10030:9000" # MinIO API
      - "10031:9001" # MinIO Console
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - aphila-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 40s

  # MinIO Client - Initialize buckets and policies
  minio-init:
    image: minio/mc:latest
    container_name: sav3_minio_init_prod
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio_admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio_admin_password123}
    volumes:
      - ./docker/minio-init:/scripts:ro
    entrypoint: /scripts/init-buckets.sh
    networks:
      - aphila-network

  # Redis for caching and session management
  redis:
    image: redis:7.2-alpine
    container_name: sav3_redis_prod
    restart: unless-stopped
    ports:
      - "10033:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - aphila-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  api:
    build: .
    env_file:
      - .env.production
    environment:
      # All environment variables will be loaded from .env.production
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: production
      PORT: ${PORT:-4000}
      # MinIO Configuration
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-media_access_key}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-media_secret_key}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-sav3-media-prod}
      MINIO_USE_SSL: "false"
      # Redis Configuration
      REDIS_URL: redis://redis:6379
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.aphila.rule=Host(`aphila.io`, `www.aphila.io`)"
      - "traefik.http.routers.aphila.entrypoints=websecure"
      - "traefik.http.routers.aphila.tls.certresolver=le"
    depends_on:
      - db
      - pgbouncer
      - minio-init
      - redis
    networks:
      - aphila-network

  backup:
    image: postgres:16
    restart: "no"
    entrypoint: ["/bin/sh", "-c"]
    command: "pg_dump -h db -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-sav3} -F c -Z 6 -f /backups/backup-$(date +%F_%T).dump"
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./postgres/backups:/backups
    networks:
      - aphila-network

volumes:
  db-data:
    driver: local
    name: sav3_db_prod_data
  minio_data:
    driver: local
    name: sav3_minio_prod_data
  redis_data:
    driver: local
    name: sav3_redis_prod_data

networks:
  aphila-network:
    driver: bridge
