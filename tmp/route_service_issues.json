{
  "media.routes.ts": {
    "service": "MediaService",
    "methods": {
      "uploadProfilePhoto": { "status": "implemented" },
      "uploadFile": {
        "status": "implemented",
        "notes": "now persists to media_assets"
      },
      "getUserMedia": { "status": "implemented" },
      "updateMediaMetadata": { "status": "implemented" },
      "deleteMedia": { "status": "implemented" },
      "getMediaById": { "status": "implemented" },
      "startChunkedUpload": { "status": "implemented" },
      "uploadChunk": { "status": "implemented" },
      "completeChunkedUpload": { "status": "implemented" },
      "getUploadProgress": { "status": "implemented" },
      "cancelUploadSession": { "status": "implemented" },
      "deleteFile": { "status": "implemented" }
    }
  },
  "subscription.routes.ts": {
    "service": "SubscriptionService",
    "methods": {
      "getPlans": { "status": "implemented" },
      "getUserSubscription": { "status": "implemented" },
      "createSubscription": {
        "status": "implemented",
        "notes": "dev payment bypass implemented (DISABLE_PAYMENTS=true). Stripe required for production paid plans."
      },
      "cancelSubscription": { "status": "implemented" },
      "getUsage": { "status": "implemented" },
      "useBoost": { "status": "implemented" }
    }
  },
  "messaging.routes.ts": {
    "service": "MessagingService",
    "methods": {
      "sendMessage": { "status": "implemented" },
      "getMatchMessages": { "status": "implemented" },
      "markMessagesAsRead": { "status": "implemented" },
      "getUnreadCount": { "status": "implemented" },
      "deleteMessage": { "status": "implemented" },
      "getMatchDetails": { "status": "implemented" },
      "reportMessage": { "status": "implemented" }
    }
  },
  "geospatial.service.ts (discovery.routes.ts)": {
    "service": "GeospatialService",
    "methods": {
      "updateUserLocation": { "status": "implemented" },
      "findNearby": { "status": "implemented" },
      "getUsersNearUser": { "status": "implemented" },
      "getDiscoveryFeed": {
        "status": "implemented",
        "notes": "age filtering implemented (verified Aug 26 2025)"
      },
      "updateLocationAndGetNearby": { "status": "implemented" }
    }
  },
  "stories.routes.ts": {
    "service": "StoryService",
    "methods": {
      "createStory": { "status": "implemented" },
      "getStoryById": { "status": "implemented" },
      "updateStorySettings": { "status": "implemented" },
      "deleteStory": { "status": "implemented" },
      "getStoriesFeed": { "status": "implemented" },
      "getUserStories": { "status": "implemented" },
      "trackView": { "status": "implemented" },
      "getStoryViewers": { "status": "implemented" },
      "getStoryStats": { "status": "implemented" },
      "getAnalyticsOverview": { "status": "implemented" },
      "addToHighlights": { "status": "implemented" },
      "getNearbyStories": { "status": "implemented" },
      "cleanupExpiredStories": { "status": "implemented" }
    }
  },
  "batch.service.ts": {
    "service": "BatchService",
    "methods": {
      "runScheduledJobs": { "status": "implemented" },
      "syncExternalData": { "status": "implemented" },
      "populateCache": { "status": "implemented" }
    },
    "notes": "Replaced thrown errors with centralized handler"
  },
  "analytics.service.ts": {
    "service": "AnalyticsService",
    "methods": {
      "trackEvent": { "status": "implemented" },
      "getUserMetrics": { "status": "implemented" },
      "getEngagementMetrics": { "status": "implemented" }
    },
    "notes": "Centralized error handler applied; platform distribution corrected"
  },
  "websocket.service.ts": {
    "service": "WebSocketService",
    "methods": {
      "handleSendMessage": { "status": "implemented" },
      "handleJoinMatch": { "status": "implemented" },
      "updateUserOnlineStatus": { "status": "implemented" }
    },
    "notes": "Error handler calls added; socket behavior preserved"
  },
  "push-notification.service.ts": {
    "service": "PushNotificationService",
    "methods": {
      "registerDevice": { "status": "implemented" },
      "sendToUser": { "status": "implemented" },
      "sendToTopic": { "status": "implemented" }
    },
    "notes": "Centralized error handling added; boolean fallbacks preserved"
  }
}
